(function(b){if(typeof module==="object"&&typeof module.exports==="object"){var a=b(require,exports);if(a!==undefined){module.exports=a}}else{if(typeof define==="function"&&define.amd){define(["require","exports","chai","mocha","./Helper"],b)}}})(function(e,d){Object.defineProperty(d,"__esModule",{value:true});var a=e("chai");e("mocha");var f=e("./Helper");var c=(function(){function g(h){this.f1=h}return g}());var b=(function(){function g(h){this.f1=h}return g}());describe("Helper Class",function(){var g=null;var i=null;var h=null;it("GetDataIfPresent2",function(){g=jQuery("body");i=jQuery(".testTarget1");h=jQuery(".testTarget2");var j=f.Helper.GetDataIfPresent(i,"test");var o=f.Helper.GetDataIfPresent(h,"test");a.expect(j,"Test data value was incorrect.").to.equal("testdata");a.expect(o,"Test data value was present, despite not being initialized.").to.equal("");var k=new c("testValue");h.data("test",k);var n=f.Helper.GetDataIfPresent(h,"test",c);var m=f.Helper.GetDataIfPresent(h,"test");var l=f.Helper.GetDataIfPresent(h,"test",b);a.expect(n,"Test data value was not present, or wasn't an instance of the \"testClass1' test class.").to.equal(k);a.expect(m,"Test data returned was not returned.").to.equal(k);a.expect(l,"Null wasn't returned, when the improper class was used as a comparison.").to.equal(null)})})});